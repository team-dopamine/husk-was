name: Java CD with Gradle

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. checkout
      - uses: actions/checkout@v3

      # 2. Java 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. AWS Credentials 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 4. gradlew build
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2 # v2.6.0
        with:
          arguments: build

      # 5. Docker 이미지 빌드
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/husk-was .

      # 6. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Docker Hub 이미지 푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKER_USERNAME }}/husk-was

      # 8. EC2 pull
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker stop husk-was
            sudo docker rm husk-was
            sudo docker image prune -af
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/husk-was
            sudo docker run -d -p 8080:8080 --name husk-was -e TZ=Asia/Seoul ${{ secrets.DOCKER_USERNAME }}/husk-was