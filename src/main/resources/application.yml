spring:
  config:
    import: 'aws-parameterstore:/config/husk/'
  datasource:
    url: ${jdbc.url}
    username: ${jdbc.username}
    password: ${jdbc.password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  mail:
    host: ${mail.host}
    port: ${mail.port}
    username: ${mail.username}
    password: ${mail.password}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

husk:
  auth:
    code-expiration: ${auth.code.expiration}
    key-prefix: ${auth.code.prefix}

aws:
  paramstore:
    enabled: true
    prefix: /config
    name: husk

cors:
  allowed-origins: ${cors.allowed-origins}

jwt:
  secret: ${jwt.secret}
  access-expiration: ${jwt.access-expiration}
  refresh-expiration: ${jwt.refresh-expiration}
  issuer: ${jwt.issuer}

oauth2:
  google:
    client-id: ${oauth2.google.client-id}
    client-secret: ${oauth2.google.client-secret}
    scope: ${oauth2.google.scope}
    redirect-uri: ${oauth2.google.redirect-uri}
    token-uri: ${oauth2.google.token-uri}
    user-info-uri: ${oauth2.google.user-info-uri}
    revoke-url: ${oauth2.google.revoke-url}
  github:
    client-id: ${oauth2.github.client-id}
    client-secret: ${oauth2.github.client-secret}
    redirect-uri: ${oauth2.github.redirect-uri}
    token-uri: ${oauth2.github.token-uri}
    user-info-uri: ${oauth2.github.user-info-uri}
    revoke-url: ${oauth2.github.revoke-url}

encryption:
  salt: ${encryption.salt}
  password: ${encryption.password}